{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Octaloop\\\\Desktop\\\\qwen\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const navigate = useNavigate();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // ✅ Load token from localStorage on app start\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n    if (token && user) {\n      try {\n        setCurrentUser({\n          ...JSON.parse(user),\n          token\n        });\n      } catch {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // ✅ Sign in method\n  const login = async (email, password) => {\n    try {\n      const res = await fetch(\"http://localhost:8000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) throw new Error(\"Invalid credentials\");\n      const data = await res.json();\n\n      // Save token + user\n      localStorage.setItem(\"token\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n      setCurrentUser({\n        ...data.user,\n        token: data.access_token\n      });\n\n      // ✅ Redirect to Dashboard\n      navigate(\"/dashboard\", {\n        replace: true\n      });\n    } catch (err) {\n      console.error(\"Login failed:\", err);\n      alert(\"Login failed. Please check your credentials.\");\n    }\n  };\n\n  // ✅ Logout\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setCurrentUser(null);\n    navigate(\"/auth\", {\n      replace: true\n    });\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lI6AQO+WB0qLPSUNLFwdQuQ6SLQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","navigate","currentUser","setCurrentUser","loading","setLoading","token","localStorage","getItem","user","JSON","parse","removeItem","login","email","password","res","fetch","method","headers","body","stringify","ok","Error","data","json","setItem","access_token","replace","err","console","error","alert","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Octaloop/Desktop/qwen/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // ✅ Load token from localStorage on app start\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const user = localStorage.getItem(\"user\");\n\n    if (token && user) {\n      try {\n        setCurrentUser({ ...JSON.parse(user), token });\n      } catch {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // ✅ Sign in method\n  const login = async (email, password) => {\n    try {\n      const res = await fetch(\"http://localhost:8000/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!res.ok) throw new Error(\"Invalid credentials\");\n      const data = await res.json();\n\n      // Save token + user\n      localStorage.setItem(\"token\", data.access_token);\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\n\n      setCurrentUser({ ...data.user, token: data.access_token });\n\n      // ✅ Redirect to Dashboard\n      navigate(\"/dashboard\", { replace: true });\n    } catch (err) {\n      console.error(\"Login failed:\", err);\n      alert(\"Login failed. Please check your credentials.\");\n    }\n  };\n\n  // ✅ Logout\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setCurrentUser(null);\n    navigate(\"/auth\", { replace: true });\n  };\n\n  const value = { currentUser, login, logout, setCurrentUser };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}