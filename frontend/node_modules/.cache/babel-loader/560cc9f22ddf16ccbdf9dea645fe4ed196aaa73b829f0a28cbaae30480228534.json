{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Octaloop\\\\Desktop\\\\qwen\\\\frontend\\\\src\\\\contexts\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport const useNotifications = () => {\n  _s();\n  return useContext(NotificationContext);\n};\n_s(useNotifications, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst notificationReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return [...state, action.notification];\n    case 'REMOVE_NOTIFICATION':\n      return state.filter(notification => notification.id !== action.id);\n    case 'CLEAR_NOTIFICATIONS':\n      return [];\n    default:\n      return state;\n  }\n};\nexport const NotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, dispatch] = useReducer(notificationReducer, []);\n  const addNotification = (type, message) => {\n    const id = Date.now() + Math.random();\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      notification: {\n        id,\n        type,\n        message\n      }\n    });\n  };\n  const removeNotification = id => {\n    dispatch({\n      type: 'REMOVE_NOTIFICATION',\n      id\n    });\n  };\n  const clearNotifications = () => {\n    dispatch({\n      type: 'CLEAR_NOTIFICATIONS'\n    });\n  };\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(NotificationProvider, \"GJ4DwEb9xxsrtSQIyJxlrnwLPps=\");\n_c = NotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","NotificationContext","useNotifications","_s","notificationReducer","state","action","type","notification","filter","id","NotificationProvider","children","_s2","notifications","dispatch","addNotification","message","Date","now","Math","random","removeNotification","clearNotifications","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Octaloop/Desktop/qwen/frontend/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const useNotifications = () => {\n  return useContext(NotificationContext);\n};\n\nconst notificationReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_NOTIFICATION':\n      return [...state, action.notification];\n    case 'REMOVE_NOTIFICATION':\n      return state.filter(notification => notification.id !== action.id);\n    case 'CLEAR_NOTIFICATIONS':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, dispatch] = useReducer(notificationReducer, []);\n\n  const addNotification = (type, message) => {\n    const id = Date.now() + Math.random();\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      notification: { id, type, message }\n    });\n  };\n\n  const removeNotification = (id) => {\n    dispatch({ type: 'REMOVE_NOTIFICATION', id });\n  };\n\n  const clearNotifications = () => {\n    dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n  };\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification,\n    clearNotifications\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,OAAON,UAAU,CAACI,mBAAmB,CAAC;AACxC,CAAC;AAACE,EAAA,CAFWD,gBAAgB;AAI7B,MAAME,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC7C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,kBAAkB;MACrB,OAAO,CAAC,GAAGF,KAAK,EAAEC,MAAM,CAACE,YAAY,CAAC;IACxC,KAAK,qBAAqB;MACxB,OAAOH,KAAK,CAACI,MAAM,CAACD,YAAY,IAAIA,YAAY,CAACE,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;IACpE,KAAK,qBAAqB;MACxB,OAAO,EAAE;IACX;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMM,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACpD,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGjB,UAAU,CAACM,mBAAmB,EAAE,EAAE,CAAC;EAErE,MAAMY,eAAe,GAAGA,CAACT,IAAI,EAAEU,OAAO,KAAK;IACzC,MAAMP,EAAE,GAAGQ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IACrCN,QAAQ,CAAC;MACPR,IAAI,EAAE,kBAAkB;MACxBC,YAAY,EAAE;QAAEE,EAAE;QAAEH,IAAI;QAAEU;MAAQ;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,kBAAkB,GAAIZ,EAAE,IAAK;IACjCK,QAAQ,CAAC;MAAER,IAAI,EAAE,qBAAqB;MAAEG;IAAG,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAC/BR,QAAQ,CAAC;MAAER,IAAI,EAAE;IAAsB,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMiB,KAAK,GAAG;IACZV,aAAa;IACbE,eAAe;IACfM,kBAAkB;IAClBC;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,mBAAmB,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EACxCA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAAChB,GAAA,CA/BWF,oBAAoB;AAAAmB,EAAA,GAApBnB,oBAAoB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}